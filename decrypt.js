async function L(t,l){let n=new TextEncoder,c=new TextDecoder,u=await crypto.subtle.importKey("raw",n.encode(l),{name:"PBKDF2"},!1,["deriveKey"]),o=await crypto.subtle.deriveKey({name:"PBKDF2",salt:n.encode("salt"),iterations:1e5,hash:"SHA-256"},u,{name:"AES-CBC",length:256},!1,["decrypt"]),h=t.split(":"),E=h[0],m=h[1],f=new Uint8Array(E.match(/.{1,2}/g).map((a)=>parseInt(a,16))),q=new Uint8Array(m.match(/.{1,2}/g).map((a)=>parseInt(a,16))),s=await crypto.subtle.decrypt({name:"AES-CBC",iv:f},o,q);return c.decode(s)}document.querySelectorAll("div[data-enc]").forEach(async(t)=>{t.innerHTML='<h4>この部分は暗号化されています。</h4><input type="password" placeholder="パスワード"><button>復号</button>';let l=t.querySelector('input[type="password"]'),n=t.querySelector("button"),c=t.getAttribute("data-enc");n.addEventListener("click",async()=>{let u=l.value;if(!u)return;try{let o=await L(c,u);t.outerHTML=o}catch(o){t.textContent="Decryption failed"}})});
